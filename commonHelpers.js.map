{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst btnEl = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nbtnEl.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      btnEl.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      btnEl.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nbtnEl.addEventListener('click', () => {\n  if (timerId) {\n    clearInterval(timerId);\n  }\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const msLeft = userSelectedDate - now;\n\n    if (msLeft <= 0) {\n      clearInterval(timerId);\n      updateTimer(0, 0, 0, 0);\n      inputEl.disabled = false;\n      btnEl.disabled = true;\n      return;\n    }\n\n    const time = convertMs(msLeft);\n    updateTimer(time.days, time.hours, time.minutes, time.seconds);\n  }, 1000);\n\n  inputEl.disabled = true;\n  btnEl.disabled = true;\n});\n\nfunction updateTimer(days, hours, minutes, seconds) {\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["inputEl","btnEl","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","options","selectedDates","selectedDate","iziToast","flatpickr","msLeft","updateTimer","time","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"2GAKA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAU,KAEdN,EAAM,SAAW,GAEjB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDV,EAAM,SAAW,KAEjBK,EAAmBI,EACnBT,EAAM,SAAW,GAEpB,CACH,EAEAW,EAAU,mBAAoBJ,CAAO,EAErCP,EAAM,iBAAiB,QAAS,IAAM,CAChCM,GACF,cAAcA,CAAO,EAGvBA,EAAU,YAAY,IAAM,CAE1B,MAAMM,EAASP,EADH,IAAI,KAGhB,GAAIO,GAAU,EAAG,CACf,cAAcN,CAAO,EACrBO,EAAY,EAAG,EAAG,EAAG,CAAC,EACtBd,EAAQ,SAAW,GACnBC,EAAM,SAAW,GACjB,MACD,CAED,MAAMc,EAAOC,EAAUH,CAAM,EAC7BC,EAAYC,EAAK,KAAMA,EAAK,MAAOA,EAAK,QAASA,EAAK,OAAO,CAC9D,EAAE,GAAI,EAEPf,EAAQ,SAAW,GACnBC,EAAM,SAAW,EACnB,CAAC,EAED,SAASa,EAAYG,EAAMC,EAAOC,EAASC,EAAS,CAClDlB,EAAO,YAAcmB,EAAeJ,CAAI,EACxCd,EAAQ,YAAckB,EAAeH,CAAK,EAC1Cd,EAAU,YAAciB,EAAeF,CAAO,EAC9Cd,EAAU,YAAcgB,EAAeD,CAAO,CAChD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}